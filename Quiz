Over the past two weeks, how often have you felt down, depressed, or hopeless?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

How frequently have you experienced a lack of interest or pleasure in activities you typically enjoy?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

Have you had trouble falling asleep, staying asleep, or experiencing restful sleep?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

How often have you felt tired, lacking energy, or fatigued?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

Have you noticed a significant change in your appetite or weight?
a) No change
b) Some change (decrease or increase)
c) Significant decrease
d) Significant increase
e) Fluctuating changes

Do you often feel guilty or worthless?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

How frequently have you experienced difficulty concentrating, making decisions, or remembering things?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

Have you had thoughts of self-harm or suicide?
a) No, not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

How often have you felt nervous, anxious, or on edge?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly

Do you find yourself avoiding certain situations or places due to fear or anxiety?
a) Never
b) Rarely
c) Sometimes
d) Frequently
e) Almost always

Have you experienced physical symptoms such as headaches, stomachaches, or muscle tension due to stress or worry?
a) Not at all
b) Rarely
c) Occasionally
d) Frequently
e) Almost constantly
















import React, { useState } from 'react';

// Quiz data
const quizData = [
  {
    question: 'What is the capital of France?',
    options: ['Paris', 'London', 'Rome', 'Madrid'],
    weights: [1, 0, 0, 0], // Weightage for each option
  },
  {
    question: 'What is the largest planet in our solar system?',
    options: ['Jupiter', 'Saturn', 'Earth', 'Mars'],
    weights: [1, 0, 0, 0], // Weightage for each option
  },
  // Add more questions...
];

// Question component
const Question = ({ question, options, selectedAnswer, onAnswerSelect }) => {
  return (
    <div>
      <h2>{question}</h2>
      <ul>
        {options.map((option, index) => (
          <li
            key={index}
            className={selectedAnswer === option ? 'selected' : ''}
            onClick={() => onAnswerSelect(option)}
          >
            {option}
          </li>
        ))}
      </ul>
    </div>
  );
};

// Quiz component
const Quiz = ({ quizData }) => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [userAnswers, setUserAnswers] = useState({});
  const [showResult, setShowResult] = useState(false);

  const handleAnswerSelect = (selectedAnswer) => {
    setUserAnswers({ ...userAnswers, [currentQuestion]: selectedAnswer });
    if (currentQuestion === quizData.length - 1) {
      setShowResult(true);
    } else {
      setCurrentQuestion(currentQuestion + 1);
    }
  };

  const calculateResult = () => {
    let totalScore = 0;
    for (let i = 0; i < quizData.length; i++) {
      const userAnswer = userAnswers[i];
      const weights = quizData[i].weights;
      const answerIndex = quizData[i].options.indexOf(userAnswer);
      const score = answerIndex !== -1 ? weights[answerIndex] : 0;
      totalScore += score;
    }
    return totalScore;
  };

  const result = calculateResult();

  return (
    <div>
      {showResult ? (
        <Result score={result} totalQuestions={quizData.length} />
      ) : (
        <Question
          question={quizData[currentQuestion].question}
          options={quizData[currentQuestion].options}
          selectedAnswer={userAnswers[currentQuestion]}
          onAnswerSelect={handleAnswerSelect}
        />
      )}
    </div>
  );
};

// Result component
const Result = ({ score, totalQuestions }) => {
  return (
    <div>
      <h2>Quiz Result</h2>
      <p>Your score is {score} out of {totalQuestions}.</p>
      {/* Display result diagram or any other visualization */}
    </div>
  );
};

// App component
const App = () => {
  return (
    <div>
      <Quiz quizData={quizData} />
    </div>
  );
};

export default App;
