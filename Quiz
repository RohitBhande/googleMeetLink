import React, { useState } from 'react';

// Quiz data
const quizData = [
  {
    question: 'What is the capital of France?',
    options: ['Paris', 'London', 'Rome', 'Madrid'],
    weights: [1, 0, 0, 0], // Weightage for each option
  },
  {
    question: 'What is the largest planet in our solar system?',
    options: ['Jupiter', 'Saturn', 'Earth', 'Mars'],
    weights: [1, 0, 0, 0], // Weightage for each option
  },
  // Add more questions...
];

// Question component
const Question = ({ question, options, selectedAnswer, onAnswerSelect }) => {
  return (
    <div>
      <h2>{question}</h2>
      <ul>
        {options.map((option, index) => (
          <li
            key={index}
            className={selectedAnswer === option ? 'selected' : ''}
            onClick={() => onAnswerSelect(option)}
          >
            {option}
          </li>
        ))}
      </ul>
    </div>
  );
};

// Quiz component
const Quiz = ({ quizData }) => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [userAnswers, setUserAnswers] = useState({});
  const [showResult, setShowResult] = useState(false);

  const handleAnswerSelect = (selectedAnswer) => {
    setUserAnswers({ ...userAnswers, [currentQuestion]: selectedAnswer });
    if (currentQuestion === quizData.length - 1) {
      setShowResult(true);
    } else {
      setCurrentQuestion(currentQuestion + 1);
    }
  };

  const calculateResult = () => {
    let totalScore = 0;
    for (let i = 0; i < quizData.length; i++) {
      const userAnswer = userAnswers[i];
      const weights = quizData[i].weights;
      const answerIndex = quizData[i].options.indexOf(userAnswer);
      const score = answerIndex !== -1 ? weights[answerIndex] : 0;
      totalScore += score;
    }
    return totalScore;
  };

  const result = calculateResult();

  return (
    <div>
      {showResult ? (
        <Result score={result} totalQuestions={quizData.length} />
      ) : (
        <Question
          question={quizData[currentQuestion].question}
          options={quizData[currentQuestion].options}
          selectedAnswer={userAnswers[currentQuestion]}
          onAnswerSelect={handleAnswerSelect}
        />
      )}
    </div>
  );
};

// Result component
const Result = ({ score, totalQuestions }) => {
  return (
    <div>
      <h2>Quiz Result</h2>
      <p>Your score is {score} out of {totalQuestions}.</p>
      {/* Display result diagram or any other visualization */}
    </div>
  );
};

// App component
const App = () => {
  return (
    <div>
      <Quiz quizData={quizData} />
    </div>
  );
};

export default App;
