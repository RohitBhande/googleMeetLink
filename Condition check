import React, { useState, useEffect } from 'react';

const SubjectDropdown = () => {
  const [subjects, setSubjects] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('');
  const [selectedSubject, setSelectedSubject] = useState('');

  useEffect(() => {
    // Fetch data from the backend and set it to the 'subjects' state variable
    const fetchData = async () => {
      try {
        const response = await fetch('/api/subjects');
        const data = await response.json();
        const uniqueCategories = Array.from(new Set(data.map((subject) => subject.category)));
        setSubjects(uniqueCategories);
      } catch (error) {
        console.error('Error fetching subject data:', error);
      }
    };

    fetchData();
  }, []);

  const handleSubjectChange = (e) => {
    setSelectedSubject(e.target.value);
  };

  return (
    <div>
      <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>
        <option value="">Select a category</option>
        {subjects.map((category) => (
          <option key={category} value={category}>
            {category}
          </option>
        ))}
      </select>
      <select value={selectedSubject} onChange={handleSubjectChange}>
        {subjects
          .filter((category) => category === selectedCategory)
          .map((category) => (
            <option key={category} value={category}>
              {category}
            </option>
          ))}
      </select>
      <p>Selected Subject: {selectedSubject}</p>
    </div>
  );
};

export default SubjectDropdown;













import axios from 'axios';
import React, { useState, useEffect } from 'react';

export default function Category() {
  const [subjects, setSubjects] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('');

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get('http://localhost:8080/getallSub');
        const data = response.data;
        const uniqueCategories = [...new Set(data.map((subject) => subject.categories))];
        setSubjects(uniqueCategories);
      } catch (error) {
        console.error('Error fetching subject data:', error);
      }
    };

    fetchData();
  }, []);

  return (
    <div>
      <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>
        <option value="">Select a category</option>
        {subjects.map((category) => (
          <option key={category} value={category}>
            {category}
          </option>
        ))}
      </select>
      <select>
        {subjects
          .filter((category) => category === selectedCategory)
          .map((category) => (
            <option key={category} value={category}>
              {category}
            </option>
          ))}
      </select>
    </div>
  );
};











import axios from 'axios';
import React, {  useState } from 'react'
import { useEffect } from 'react';
export default function Category() {
    
        const [subjects, setSubjects] = useState([]);
        const [selectedCategory, setSelectedCategory] = useState('');
      
        useEffect(() => {
          // Fetch data from the backend and set it to the 'subjects' state variable
          const fetchData = async () => {
            try {
               
                await axios.get('http://localhost:8080/getallSub')
                    .then(response => setSubjects(response.data))
              console.log(subjects)
            } catch (error) {
              console.error('Error fetching subject data:', error);
            }
          };
      
          fetchData();
        }, []);
      
        return (
          <div>
            <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>
              <option value="">Select a category</option>
              {subjects.map((subject) => (
                <option key={subject.categories} value={subject.categories}>
                  {subject.categories}
                </option>
              ))}
            </select>
            <select>
              {subjects
                .filter((subject) => subject.categories === selectedCategory)
                .map((subject) => (
                  <option key={subject.subName} value={subject.subName}>
                    {subject.subName}
                  </option>
                ))}
            </select>
          </div>
        );
      };
      
