





import React, { useState } from 'react';

function MyForm() {

  const [formData, setFormData] = useState({

    name: '',

    email: '',

    message: ''

  });

  const handleChange = (e) => {

    setFormData({ ...formData, [e.target.name]: e.target.value });

  };

  const handleSubmit = (e) => {

    e.preventDefault();

    // Call your function here and pass the form data

    yourFunction(formData);

  };

  return (

    <form onSubmit={handleSubmit}>

      <label>

        Name:

        <input type="text" name="name" value={formData.name} onChange={handleChange} />

      </label>

      <label>

        Email:

        <input type="email" name="email" value={formData.email} onChange={handleChange} />

      </label>

      <label>

        Message:

        <textarea name="message" value={formData.message} onChange={handleChange} />

      </label>

      <button type="submit">Submit</button>

    </form>

  );

}

export default MyForm;

import React, { useState } from 'react';

function MyForm() {

  const [formData, setFormData] = useState({

    name: '',

    email: '',

    message: ''

  });

  const handleChange = (e) => {

    setFormData({ ...formData, [e.target.name]: e.target.value });

  };

  const handleSubmit = (e) => {

    e.preventDefault();

    // Call your function here and pass the form data

    yourFunction(formData);

  };

  return (

    <form onSubmit={handleSubmit}>

      <label>

        Name:

        <input type="text" name="name" value={formData.name} onChange={handleChange} />

      </label>

      <label>

        Email:

        <input type="email" name="email" value={formData.email} onChange={handleChange} />

      </label>

      <label>

        Message:

        <textarea name="message" value={formData.message} onChange={handleChange} />

      </label>

      <button type="submit">Submit</button>

    </form>

  );

}

export default MyForm;

import React from 'react';

import { Document, Page, pdfjs } from 'react-pdf';

import samplePDF from './path/to/pdf/sample.pdf';

pdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;

const PDFViewer = () => {

  return (

    <div style={{ width: '500px', height: '600px' }}>

      <Document file={samplePDF}>

        <Page pageNumber={1} width={500} height={600} />

      </Document>

    </div>

  );

};

export default PDFViewer;














import React from 'react';

import PDFViewer from './PDFViewer';

const App = () => {

  return (

    <div>

      <h1>PDF Viewer Example</h1>

      <div style={{ width: '500px', height: '600px' }}>

        <PDFViewer pdfPath="path/to/full/pdf/file.pdf" />

      </div>

    </div>

  );

};

export default App;







import React, { useState } from 'react';

import { Document, Page, pdfjs } from 'react-pdf';

pdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;

const PDFViewer = ({ pdfPath }) => {

  const [numPages, setNumPages] = useState(null);

  const onDocumentLoadSuccess = ({ numPages }) => {

    setNumPages(numPages);

  };

  return (

    <div>

      <Document file={pdfPath} onLoadSuccess={onDocumentLoadSuccess}>

        {Array.from(new Array(numPages), (el, index) => (

          <Page key={`page_${index + 1}`} pageNumber={index + 1} />

        ))}

      </Document>

    </div>

  );

};

export default PDFViewer;






import React, { useState } from 'react';

const PDFViewer = ({ imagePath, pdfPath }) => {

  const [showViewer, setShowViewer] = useState(false);

  const handleClick = () => {

    setShowViewer(true);

  };

  return (

    <div>

      <div>

        <img

          id="pdfImage"

          src={imagePath}

          alt="PDF Image"

          onClick={handleClick}

          style={{ width: '200px', cursor: 'pointer' }}

        />

      </div>

      {showViewer && (

        <div id="pdfViewer" style={{ width: '100%', height: '500px' }}>

          <iframe id="pdfFrame" src={pdfPath} frameBorder="0"></iframe>

        </div>

      )}

    </div>

  );

};

export default PDFViewer;

import React from 'react';

import PDFViewer from './PDFViewer';

const App = () => {

  return (

    <div>

      <h1>PDF Viewer Example</h1>

      <PDFViewer

        imagePath="path/to/pdf/image.jpg"

        pdfPath="path/to/full/pdf/file.pdf"

      />

    </div>

  );

};

export default App;






import { Document, Page, pdfjs } from 'react-pdf';
import 'react-pdf/dist/esm/Page/AnnotationLayer.css';
const pdfUrl = 'path/to/your/pdf/file.pdf';

const [numPages, setNumPages] = useState(null);

const pdfUrl = 'path/to/your/pdf/file.pdf';

const [numPages, setNumPages] = useState(null);

const onDocumentLoadSuccess = ({ numPages }) => {

  setNumPages(numPages);

};

return (

  <div>

    <Document

      file={pdfUrl}

      onLoadSuccess={onDocumentLoadSuccess}

      onLoadError={(error) => console.log('Error while loading PDF:', error)}

    >

      {Array.from(new Array(numPages), (el, index) => (

        <Page

          key={`page_${index + 1}`}

          pageNumber={index + 1}

          width={250}

        />

      ))}

    </Document>

  </div>

);
