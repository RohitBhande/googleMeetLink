const DropdownCheckboxList = () => {
  // Define state to track the dropdown visibility and selected checkboxes
  const [isOpen, setIsOpen] = useState(false);
  const [selectedCheckboxes, setSelectedCheckboxes] = useState([]);

  // Array of options for the dropdown list
  const options = [
    { id: 1, label: 'Option 1' },
    { id: 2, label: 'Option 2' },
    { id: 3, label: 'Option 3' },
    // Add more options as needed
  ];

  // Function to handle checkbox selection
  const handleCheckboxChange = (event) => {
    const checkboxValue = event.target.value;

    // Check if the checkbox is already selected
    const isSelected = selectedCheckboxes.includes(checkboxValue);

    // Update the selected checkboxes state
    if (isSelected) {
      setSelectedCheckboxes(selectedCheckboxes.filter((item) => item !== checkboxValue));
    } else {
      setSelectedCheckboxes([...selectedCheckboxes, checkboxValue]);
    }
  };

  // Function to handle dropdown visibility
  const toggleDropdown = () => {
    setIsOpen(!isOpen);
  };

  // Function to render the checkbox list
  const renderCheckboxList = () => {
    return (
      <div className="checkbox-list">
        {options.map((option) => (
          <label key={option.id}>
            <input
              type="checkbox"
              value={option.label}
              checked={selectedCheckboxes.includes(option.label)}
              onChange={handleCheckboxChange}
            />
            {option.label}
          </label>
        ))}
      </div>
    );
  };

  return (
    <div className="dropdown-checkbox-list">
      <button className="dropdown-button" onClick={toggleDropdown}>
        Select Options
      </button>
      {isOpen && renderCheckboxList()}
    </div>
  );
};

export default DropdownCheckboxList;









import React, { useState } from 'react';
import data from './data.json'; // Import the JSON file

const MultiDropdown = () => {
  const [selectedItems, setSelectedItems] = useState([]);
  const [selectedSubItems, setSelectedSubItems] = useState([]);

  const handleItemChange = (e) => {
    const { value, checked } = e.target;

    if (checked) {
      setSelectedItems((prevSelectedItems) => [...prevSelectedItems, value]);
    } else {
      setSelectedItems((prevSelectedItems) => prevSelectedItems.filter((item) => item !== value));
    }
  };

  const handleSubItemChange = (e) => {
    const { value, checked } = e.target;

    if (checked) {
      setSelectedSubItems((prevSelectedSubItems) => [...prevSelectedSubItems, value]);
    } else {
      setSelectedSubItems((prevSelectedSubItems) => prevSelectedSubItems.filter((item) => item !== value));
    }
  };

  return (
    <div>
      {data.map((item) => (
        <div key={item.id}>
          <input
            type="checkbox"
            value={item.id}
            checked={selectedItems.includes(item.id)}
            onChange={handleItemChange}
          />
          <label>{item.name}</label>
          {selectedItems.includes(item.id) && (
            <div>
              {item.options.map((option) => (
                <div key={option.id}>
                  <input
                    type="checkbox"
                    value={option.id}
                    checked={selectedSubItems.includes(option.id)}
                    onChange={handleSubItemChange}
                  />
                  <label>{option.name}</label>
                </div>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  );
};

export default MultiDropdown;





import React, { useState } from 'react';
import data from './data.json'; // Import the JSON file

const MultiDropdown = () => {
  const [selectedItems, setSelectedItems] = useState([]);

  const handleItemChange = (e) => {
    const { value, checked } = e.target;

    if (checked) {
      setSelectedItems((prevSelectedItems) => [...prevSelectedItems, value]);
    } else {
      setSelectedItems((prevSelectedItems) => prevSelectedItems.filter((item) => item !== value));
    }
  };

  return (
    <div>
      {data.map((item) => (
        <div key={item.id}>
          <input
            type="checkbox"
            value={item.id}
            checked={selectedItems.includes(item.id)}
            onChange={handleItemChange}
          />
          <label>{item.name}</label>
          {selectedItems.includes(item.id) && (
            <div>
              {item.options.map((option) => (
                <div key={option.id}>
                  <input
                    type="checkbox"
                    value={option.id}
                    checked={selectedItems.includes(option.id)}
                    onChange={handleItemChange}
                  />
                  <label>{option.name}</label>
                </div>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  );
};

export default MultiDropdown;






import React, { useState } from 'react';
import data from './data.json'; // Import the JSON file

const MultiDropdown = () => {
  const [selectedItems, setSelectedItems] = useState([]);

  const handleItemChange = (e) => {
    const { value, checked } = e.target;

    if (checked) {
      setSelectedItems((prevSelectedItems) => [...prevSelectedItems, value]);
    } else {
      setSelectedItems((prevSelectedItems) => prevSelectedItems.filter((item) => item !== value));
    }
  };

  return (
    <div>
      {data.map((item) => (
        <div key={item.id}>
          <input
            type="checkbox"
            value={item.id}
            checked={selectedItems.includes(item.id)}
            onChange={handleItemChange}
          />
          <label>{item.name}</label>
        </div>
      ))}
    </div>
  );
};

export default MultiDropdown;







import React, { useState } from 'react';

const Dropdown = () => {
  const [selectedOption, setSelectedOption] = useState(''); // State to track the selected option

  const handleOptionChange = (e) => {
    setSelectedOption(e.target.value);
  };

  return (
    <div>
      <select value={selectedOption} onChange={handleOptionChange}>
        <option value="">Select an option</option>
        <option value="single">Single</option>
        <option value="multiple">Multiple</option>
      </select>
      {selectedOption === 'single' && <SingleDropdown />} {/* Render SingleDropdown component if 'single' is selected */}
      {selectedOption === 'multiple' && <MultiDropdown />} {/* Render MultiDropdown component if 'multiple' is selected */}
    </div>
  );
};

export default Dropdown;






import React, { useState } from 'react';
import data from './data.json'; // Import the JSON file

const SingleDropdown = () => {
  const [selectedItem, setSelectedItem] = useState('');

  const handleItemChange = (e) => {
    setSelectedItem(e.target.value);
  };

  return (
    <div>
      <select value={selectedItem} onChange={handleItemChange}>
        <option value="">Select an item</option>
        {data.map((item) => (
          <option key={item.id} value={item.id}>
            {item.name}
          </option>
        ))}
      </select>
    </div>
  );
};

export default SingleDropdown;


import React, { useState } from 'react';
import data from './data.json'; // Import the JSON file

const MultiDropdown = () => {
  const [selectedItems, setSelectedItems] = useState([]);

  const handleItemChange = (e) => {
    const options = Array.from(e.target.options);
    const selectedValues = options.filter((option) => option.selected).map((option) => option.value);
    setSelectedItems(selectedValues);
  };

  return (
    <div>
      <select multiple value={selectedItems} onChange={handleItemChange}>
        {data.map((item) => (
          <option key={item.id} value={item.id}>
            {item.name}
          </option>
        ))}
      </select>
    </div>
  );
};

export default MultiDropdown;
